stages:
  - test
  - deploy

# rust-latest-test:
#   stage: test
#   image: rust:latest
#   script:
#     - cargo test --verbose
#
# rust-nightly-test:
#   stage: test
#   image: rustlang/rust:nightly
#   script:
#     - cargo test --verbose

pages:
  stage: deploy
  image: "rustdocker/rust:nightly"
  script:
    # Generate sugarlang docs
    - cargo run --bin sc_server -- --only-docs
    # Generate rust docs
    - cargo doc -p sc_proxy

    # Generate coverage report
    - cargo install cargo-tarpaulin
    - cargo tarpaulin --out html xml

    - mkdir -p public/
    - rm -rf public/*
    - mkdir -p public/doc/sugarlang/ public/doc/rust
    - cp -r target/sl_docs/* public/doc/sugarlang/
    - cp -r target/doc/* public/doc/rust/
    - cp tarpaulin-report.html public/tarpaulin-report.html

  artifacts:
    paths:
      - public
    reports:
      cobertura: cobertura.xml
